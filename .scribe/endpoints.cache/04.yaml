## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Managing Tickets by Author'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: 'Managing Tickets by Author'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tickets'
      description: 'Retrieves all tickets created by a specific user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: "The author's ID."
        required: true
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: null
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: sort=name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name. Wildcards are supported.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email. Wildcards are supported.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: sort=name
      'filter[name]': architecto
      'filter[email]': architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":3,"attributes":{"name":"Mr. Henri Beatty MD","email":"bmertz@example.net","isManager":false,"email_verified_at":"2024-03-14T04:41:51.000000Z","created_at":"2024-03-14T04:41:51.000000Z","updated_at":"2024-03-14T04:41:51.000000Z"},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/3"}}],"links":{"first":"http:\/\/localhost:8000\/api\/v1\/authors?page=1","last":"http:\/\/localhost:8000\/api\/v1\/authors?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/v1\/authors?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/v1\/authors","per_page":15,"to":1,"total":10}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: 'Managing Tickets by Author'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a ticket'
      description: 'Creates a ticket for the specific user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: "The author's ID."
        required: true
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: canceled
        type: string
        enumValues:
          - hold
          - active
          - canceled
          - completed
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          description: 'Eius et animi quos velit et.'
          title: v
          status: canceled
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{author_id}/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets by Author'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete an author's ticket"
      description: "Deletes an author's ticket."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: "The author's ID."
        required: true
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ticket ID.'
        required: true
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: null
      id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
